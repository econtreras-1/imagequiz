{"version":3,"sources":["communication/api.js","components/Home.js","components/Login.js","components/NavigationBar.js","components/QuizPopup.js","components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["apiHost","api","getFlowers","fetch","then","response","json","getQuizzes","addScore","score","method","headers","body","JSON","stringify","Home","props","useState","flowers","setFlowers","onImageClick","event","onQuizClicked","target","id","useEffect","x","catch","e","console","log","style","textAlign","images","i","flw","push","onClick","className","to","Figure","Image","width","height","alt","name","src","picture","Caption","createFlowers","Login","history","useHistory","email","setEmail","password","setPassword","Form","onSubmit","trim","length","onLoggedIn","Group","controlId","Label","Control","type","placeholder","onChange","value","Button","variant","NavigationBar","Navbar","bg","expand","Nav","Link","username","QuizSlide","answer","setAnswer","btnState","setBtnState","quizzes","setQuizzes","onAnswerGiven","quizNum","questionNum","choices","questionIndex","questions","selectIndex","question","createQuestions","quiz","createQuizzes","Row","Col","disabled","Quiz","result","setResult","answerCount","setAnswerCount","prevResult","alert","window","location","reload","App","localStorage","getItem","setUsername","setQuizNum","Container","fluid","exact","path","quizID","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8efa78b2.chunk.js","sourcesContent":["let apiHost = \"https://econtreras-1-imagequiz.herokuapp.com\";\n\nlet getFlowers = () => {\n    return fetch(apiHost + '/flowers')\n    .then(response => response.json());\n};\n\nlet getQuizzes = () => {\n    return fetch(apiHost + '/quizzes')\n    .then(response => response.json());\n};\n\nlet addScore = (score) => {\n    return fetch(apiHost + '/score', {\n        method: 'post',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(score)\n    });\n}\n\n\nlet api = {\n    getFlowers: getFlowers,\n    getQuizzes: getQuizzes,\n    addScore: addScore\n};\n\nexport default api;","import { Link } from \"react-router-dom\";\nimport Figure from 'react-bootstrap/Figure';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useState, useEffect } from 'react';\nimport api from \"../communication/api\";\n\n\nfunction Home(props) {\n\n    const [flowers, setFlowers] = useState(null);\n\n    let onImageClick = (event) => {\n        props.onQuizClicked(event.target.id);\n    }\n\n    // GET Flowers from API\n    useEffect(() => {\n        if(flowers === null) {\n            api.getFlowers()\n            .then(x => setFlowers(x))\n            .catch(e => console.log(e));\n        }\n        console.log(\"useEffect ran\");\n    });\n\n\n    return (\n        <div>\n            <h2 style={{ textAlign: \"center\" }}>Home</h2>\n            {createFlowers()}\n        </div>\n    );\n\n\n    function createFlowers() {\n        let images = [];\n        let i = 0;\n        for (let flw in flowers) {\n            images.push(<Link id={i} onClick={onImageClick} className='link' to=\"/quiz\">\n                <Figure id={i}>\n                    <Figure.Image id={i} width={171} height={180}\n                        alt={flowers[flw].name}\n                        src={flowers[flw].picture} />\n                    <Figure.Caption id={i}>{flowers[flw].name}</Figure.Caption>\n                </Figure>\n            </Link>)\n            i++;\n        }\n        return images;\n    }\n\n}\n\nexport default Home;","import Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useHistory } from 'react-router-dom';\nimport { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nexport default function Login(props) {\n    const history = useHistory();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    let onLoginSubmitted = () => {\n        if (email.trim().length === 0 || password.trim().length === 0) {\n            return;\n        }\n        props.onLoggedIn(email);\n        history.push('/');\n    }\n\n    let onEmailChanged = (event) => {\n        setEmail(event.target.value);\n    }\n\n    let onPasswordChanged = (event) => {\n        setPassword(event.target.value);\n    }\n\n    return (\n        <Form onSubmit={onLoginSubmitted}>\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={onEmailChanged} />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={onPasswordChanged} />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n                Submit\n      </Button>\n        </Form>\n\n\n\n    );\n}","\nimport { Link } from \"react-router-dom\";\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport '../App.css'\n\nfunction NavigationBar(props) {\n\n    return (\n        <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n\n            <Nav.Link>\n                <Link className='link' to=\"/\">Home</Link>\n            </Nav.Link>\n\n            <Nav.Link>\n                {\n                    props.username === '' ?\n                        <Link className='link' to=\"/login\">Login</Link>\n                        :\n                        <Link className='link' to=\"/logout\">{props.username}, Logout</Link>\n                }\n            </Nav.Link>\n\n        </Navbar>\n    );\n}\n\nexport default NavigationBar;","import Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Figure from 'react-bootstrap/Figure';\nimport { useState, useEffect } from 'react';\nimport api from '../communication/api';\n\n\nexport default function QuizSlide(props) {\n    const [answer, setAnswer] = useState(\"\");\n    const [btnState, setBtnState] = useState(false);\n    const [quizzes, setQuizzes] = useState(null);\n\n    let onAnswerGiven = (event) => {\n        setBtnState(true);\n        if (quizzes[props.quizNum][props.questionNum].choices[event.target.id] === quizzes[props.quizNum][props.questionNum].answer) {\n            setAnswer(\"Your answer \" + quizzes[props.quizNum][props.questionNum].answer + \" is correct!\");\n            props.onAnswerGiven(true);\n        } else {\n            setAnswer(\"Wrong Answer. Correct answer is: \" + quizzes[props.quizNum][props.questionNum].answer);\n            props.onAnswerGiven(false);\n        }\n    }\n\n    useEffect(() => {\n        if (quizzes === null) {\n            api.getFlowers()\n                .then(x => setQuizzes(createQuizzes(x)))\n                .catch(e => console.log(e));\n        }\n    });\n\n    // Create Quiz Questions\n    function createQuestions(flowers) {\n        let questions = [];\n        let selectIndex = 0;\n\n        for (let i = 0; i < flowers.length; i++) {\n            selectIndex = i;\n            if (selectIndex > (flowers.length - 4)) {\n                selectIndex = i - 2;\n            }\n            let question = {\n                picture: flowers[i].picture,\n                choices: [flowers[selectIndex].name, flowers[selectIndex + 1].name, flowers[selectIndex + 2].name],\n                answer: flowers[i].name\n            };\n            questions.push(question);\n        }\n        return questions;\n    };\n\n    // Create Quizzes\n    function createQuizzes(flowers) {\n        let quizzes = [];\n        let questionIndex = 0;\n        let questions = createQuestions(flowers);\n\n        for (let i = 0; i < questions.length; i++) {\n            questionIndex = i;\n            if (questionIndex > (questions.length - 7)) {\n                questionIndex = i - 5;\n            }\n\n            let quiz = [\n                questions[questionIndex],\n                questions[questionIndex + 1],\n                questions[questionIndex + 2],\n                questions[questionIndex + 3],\n                questions[questionIndex + 4],\n                questions[questionIndex + 5]\n            ];\n            quizzes.push(quiz);\n        }\n        return quizzes;\n    };\n\n\n    function createQuizPopup() {\n        if (quizzes === null) {\n            return [];\n        }\n\n        return (\n            <Figure>\n                <Figure.Image width={171} height={180}\n                    alt={quizzes[props.quizNum][props.questionNum].answer}\n                    src={quizzes[props.quizNum][props.questionNum].picture} />\n                <Figure.Caption>\n                    <Button disabled={btnState} id={0} onClick={onAnswerGiven}>{quizzes[props.quizNum][props.questionNum].choices[0]}</Button>\n                    <Button disabled={btnState} id={1} onClick={onAnswerGiven}>{quizzes[props.quizNum][props.questionNum].choices[1]}</Button>\n                    <Button disabled={btnState} id={2} onClick={onAnswerGiven}>{quizzes[props.quizNum][props.questionNum].choices[2]}</Button>\n                    <br />{answer}\n                </Figure.Caption>\n            </Figure>\n        );\n    }\n\n    \n    return (\n        <Row><Col>\n            {createQuizPopup()}\n        </Col></Row>\n    );\n}","import Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport QuizPopup from './QuizPopup';\nimport { useState } from 'react';\n\n\n\nexport default function Quiz(props) {\n\n    const [result, setResult] = useState(0);\n    const [answerCount, setAnswerCount] = useState(1);\n\n    let onRestart = (event) => {\n        window.location.reload();\n    }\n\n    let onAnswerGiven = (answer) => {\n        setAnswerCount(answerCount + 1);\n        \n        let prevResult = 0;\n        \n        if (answer) {\n            setResult(result + 1);\n            prevResult = 1;\n        }\n        \n        if (answerCount >= 6) {\n            alert(\"Total score is: \" + (result + prevResult));\n        }\n    }\n\n    return (\n        <Col>\n            <Row>\n                <Button onClick={onRestart}>Restart Quiz</Button>\n            </Row>\n            <Row>\n                <h2>Current Score: {result}/6</h2>\n            </Row>\n            <Row>\n                <QuizPopup onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={0} />\n            </Row>\n            <Row>\n                <QuizPopup onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={1} />\n            </Row>\n            <Row>\n                <QuizPopup onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={2} />\n            </Row>\n            <Row>\n                <QuizPopup onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={3} />\n            </Row>\n            <Row>\n                <QuizPopup onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={4} />\n            </Row>\n            <Row>\n                <QuizPopup onAnswerGiven={onAnswerGiven} quizNum={props.quizNum} questionNum={5} />\n            </Row>\n        </Col>\n    );\n}","\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport NavigationBar from \"./components/NavigationBar\";\nimport { useState } from 'react';\nimport Quiz from './components/Quiz';\n\n\nfunction App() {\n  const [username, setUsername] = useState(localStorage.getItem('username') || '');\n  const [quizNum, setQuizNum] = useState(localStorage.getItem('quizID') || 0);\n\n  let onLoggedIn = (email) => {\n    localStorage.setItem('username', email);\n    setUsername(email);\n  }\n\n  let onQuizClicked = (quizID) => {\n    localStorage.setItem('quizID', quizID);\n    setQuizNum(quizID);\n  }\n  return (\n    <HashRouter>\n      <Container fluid>\n        <NavigationBar username={username} />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home onQuizClicked={onQuizClicked} />\n          </Route>\n          <Route path=\"/login\" >\n            <Login onLoggedIn={onLoggedIn} />\n          </Route>\n          <Route path=\"/quiz\" >\n            <Quiz quizNum={quizNum} />\n          </Route>\n        </Switch>\n      </Container>\n    </HashRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}